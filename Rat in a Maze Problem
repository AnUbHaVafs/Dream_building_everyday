class Solution{
    private:
    void solve(int row, int col, string path, int di[], int dj[], vector<vector<int>>m, int n,
    vector<string>&ans, vector<vector<int>> &vis){
        if(row==n-1 && col==n-1){
            ans.push_back(path);
            return;
        }
        string dir = "DLRU"; 
        for(int index=0;index<4;index++){
            int newrow = row + di[index];
            int newcol = col + dj[index];
            if(newrow>=0 && newrow<n && newcol>=0 && newcol<n && !vis[newrow][newcol]
            && m[newrow][newcol]==1){
                vis[newrow][newcol]=1;
                solve(newrow,newcol,path+dir[index],di,dj,m,n,ans,vis);
                vis[newrow][newcol]=0;
            }
        }
    }
    public:
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string> ans;
        string path = ""; // order : DLRU
        int di[] = {+1,0,0,-1};
        int dj[] = {0,-1,+1,0};
        vector<vector<int>>vis(n,vector<int>(n,0));
        if(m[0][0]==1){
            vis[0][0]=1;
            solve(0,0,path,di,dj,m,n,ans,vis);
        }
        return ans;
    }
};
