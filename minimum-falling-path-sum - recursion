class Solution {
    int func(int i, int j, vector<vector<int>>& matrix){
        int n = matrix.size();
        int m = matrix[0].size();
        if(j<0 || j>=m)return 1e9;
        if(i==0)return matrix[0][j];

        int u = matrix[i][j] + func(i-1,j,matrix);
        int ld = matrix[i][j] + func(i-1,j-1,matrix);
        int rd = matrix[i][j] + func(i-1,j+1,matrix);

        return min(u,min(ld,rd));
    }
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
         int mini=INT_MAX;
         int n = matrix.size();
         int m = matrix[0].size();
        for(int j=0;j<=m-1;j++){
            mini = min(mini,func(n-1,j,matrix));
        }
        return mini;
    }
};
