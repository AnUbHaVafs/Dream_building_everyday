int mod=1e9 + 7;
int f(int i, int sum, vector<int> &nums, vector<vector<int>>&dp){
	if(sum==0)return 1;
	if(i==0)return nums[0]==sum;
	if(dp[i][sum]!=-1)return dp[i][sum];
	int notPick = f(i-1,sum,nums,dp);
	int pick=0;
	if(nums[i]<=sum)pick = f(i-1,sum-nums[i],nums,dp);
	return dp[i][sum]= (pick+notPick)%mod;
}

int findWays(vector<int>& arr, int k)
{
	int n = arr.size();	
	vector<vector<int>>dp(n,vector<int>(k+1,-1));
	return f(n-1,k,arr,dp);
}
