class Solution {
    bool findSubarrayLen(vector<int> nums, int i1, int j1, int &maxLen){
        if((j1-i1)<1)return false;
        int i=i1-i1;
        int j=j1-i1;
        for(int k=i+1;k<=j;k++){
            if(k%2==1){
                if(nums[k+i1]-nums[k+i1-1]!=1)return false;
            }
            else{
                if(nums[k+i1]-nums[k+i1-1]!=-1)return false;
            }
        }
        return true;
    }
public:
    int alternatingSubarray(vector<int>& nums) {
        int n =nums.size();
        if(n==0)return 0;
        int maxLen = -1;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(findSubarrayLen(nums,i,j,maxLen)){
                    maxLen=max(maxLen,(j-i+1));
                }
            }
        }
        return maxLen;
    }
};
