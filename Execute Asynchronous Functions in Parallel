async function promiseAll<T>(functions: (() => Promise<T>)[]): Promise<T[]> {
 let resolvedPromises: T[] = [];
  let resolvedCounter = 0;

  return new Promise((resolve, reject) => {
    functions.forEach((item, index) => {
      item()
        .then(result => {
          resolvedPromises[index] = result;
          resolvedCounter++;
          if (resolvedCounter === functions.length) {
            resolve(resolvedPromises);
          }
        })
        .catch(err => reject(err));
    });
  });
};

/**
 * const promise = promiseAll([() => new Promise(res => res(42))])
 * promise.then(console.log); // [42]
 */
