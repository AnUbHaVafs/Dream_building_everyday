class Solution {
public:
    int majorityElement(vector<int>& nums) {
    /// Optimal Approach : Morre's Voting Algorithm : O(N) , O(1)
        int cnt=0;
        int ele;
        for(int i=0;i<nums.size();i++){
            if(cnt==0){
                ele = nums[i];
                cnt=1;
            }
            else if(nums[i]==ele){
                cnt++;
            }
            else{
                cnt--;
            }
        }
        return ele;


    ///  Better Approach
        // map<int,int> freq;
        // for(int i=0;i<nums.size();i++){
        //     freq[nums[i]]++;
        // }
        // for(auto it : freq){
        //     if(it.second > (nums.size()/2))return it.first;
        // }
        // return -1;


    //     // brute force 
    //     for(int i=0;i<nums.size();i++){
    //         int cnt=0;
    //         for(int j=0;j<nums.size();j++){
    //             if(nums[j]==nums[i])cnt++;
    //         }
    //         if(cnt>(nums.size()/2))return nums[i];
    //     }
    //     return -1;
    }
};
